@charset "utf-8";
/*! =========================================
layout/_arrange.scss
============================================ */
.mui-arrange {
  display: flex;
  flex-wrap: wrap;
  margin: 0;
  padding: 0;
  list-style: none;
}
/* block modifier
------------------------------------------ */
// spacing
.mui-arrange--lv {
  @for $i from 1 through 4 {
    &#{$i} {
      margin: -#{$spaces * $i} 0 0 -#{$spaces * $i};
    }
  }
}
// general
.mui-arrange--center {
  justify-content: center;
}
.mui-arrange--right {
  justify-content: flex-end;
}
.mui-arrange--between {
  justify-content: space-between;
}
.mui-arrange--start {
  align-items: flex-start;
}
.mui-arrange--middle {
  align-items: center;
}
[class*="mui-arrange__"] {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
.mui-arrange--column {
  flex-direction: column;
}
.mui-arrange--column-reverse {
  flex-direction: column-reverse;
}
// .mui-arrange--column-reverse-xs {
//   @include breakpoints(xs, sm) {
//     flex-direction: column-reverse;
//   }
// }
// .mui-arrange--column-reverse-sm {
//   @include breakpoints(sm, md) {
//     flex-direction: column-reverse;
//   }
// }

// adaptive height
.mui-arrange--adaptive-height {
  flex-direction: column;
  justify-content: space-between;
  height: 100%;
  @for $i from 1 through 4 {// マイナスマージンと組み合わせると崩れるため、計算が必要
    &.mui-arrange--lv#{$i} {
      height: calc(100% + #{$spaces * $i});
    }
  }
}
/* block element
------------------------------------------ */
.mui-arrange--lv {
  @for $i from 1 through 4 {
    &#{$i} > [class*="mui-arrange__"] {
      padding: #{$spaces * $i} 0 0 #{$spaces * $i};
    }
  }
}
// custom with item
.mui-arrange__item {
  .mui-arrange--work-module-content > & {
    flex: 1;
    @include breakpoints(md, xl) {
      order: -1;
    }
  }
}

.mui-arrange__flex-1 {
  flex: 1;
}

// n-of-n
.mui-arrange__ {
  $a: 1 1, 1 2, 1 3, 1 4, 1 5, 1 6, 2 3, 2 5, 3 4, 3 5;
  @each $i in $a {
    &#{nth($i, 1)}-of-#{nth($i, 2)} {
      flex: 0 0 calc( #{nth($i, 1)} / #{nth($i, 2)} * 100% );
    }
  }
}
// n-to-n-to-n-to-n
.mui-arrange__ {
  @for $xs from 1 through 4 {
    @for $sm from 1 through 4 {
      @for $md from 1 through 6 {
        @for $lg from 1 through 8 {
          &#{ $xs }-to-#{ $sm }-to-#{ $md }-to-#{ $lg } {
            @include breakpoints(xs, sm) {
              flex: 0 0 calc( 100% / #{ $xs } );
            }
            @include breakpoints(sm, md) {
              flex: 0 0 calc( 100% / #{ $sm } );
            }
            @include breakpoints(md, lg) {
              flex: 0 0 calc( 100% / #{ $md } );
            }
            @include breakpoints(lg, xl) {
              flex: 0 0 calc( 100% / #{ $lg } );
            }
          }
        } 
      }
    } 
  }
}
// custom by data-style
// [class*="mui-arrange__"] {
//   &[data-style*="primary-xs"]
//     @include brekpoints(xs, sm) {
//       order: -1;
//     }
//   }
//   &[data-style*="primary-sm"]
//     @include brekpoints(sm, md) {
//       order: -1;
//     }
//   }
//   &[data-style*="primary-md"]
//     @include brekpoints(md, lg) {
//       order: -1;
//     }
//   }
//   &[data-style*="primary-lg"]
//     @include brekpoints(lg, xl) {
//       order: -1;
//     }
//   }
// }